    def "Connection"() {
        setup:

        CouchbaseAsyncCluster cluster = Mock()

        // AsyncCluster test = CouchbaseAsyncCluster.create("Testy")
        //  println test

        AsyncCluster asyncCluster = Mock(AsyncCluster.class)
        asyncCluster.authenticate(_, _) >> asyncCluster
        asyncCluster.openBucket(_) >> Observable.just(bucket)


        new MockUp<CouchbaseAsyncCluster>() {

            public AsyncCluster create(String host) {
                return asyncCluster;
            }

        };
        io.vertx.core.json.JsonObject config = new io.vertx.core.json.JsonObject()
        config.put("hostName", "test")
        config.put("username", "x")
        config.put("password", "x")
        config.put("bucketName", "local")
        expect:
        wrapper.getConnection(config,
            { x ->
                if (x.succeeded()) {
                    print bucket.name()
                    bucket = x.result(

                    )
                }
            })


    }

